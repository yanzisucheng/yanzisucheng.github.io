(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{783:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、javascript-的词法（lexical-grammar）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、javascript-的词法（lexical-grammar）"}},[s._v("#")]),s._v(" 一、JavaScript 的词法（lexical grammar）")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("ECMAScript 源码文本")]),s._v("会被从左到右扫描，并被转换为一系列的输入元素，包括 "),a("code",[s._v("token、控制符、行终止符、注释和空白符")]),s._v("。ECMAScript 定义了一些关键字、字面量以及行尾分号补全的规则。")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Lexical_grammar",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[s._v("可以参考MDN文档--词法文法")]),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"_1-1、分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、分类"}},[s._v("#")]),s._v(" 1.1、分类")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("WhiteSpace")]),s._v(" 空白字符")]),s._v(" "),a("li",[a("code",[s._v("LineTerminator")]),s._v(" 换行符")]),s._v(" "),a("li",[a("code",[s._v("Comment")]),s._v(" 注释")]),s._v(" "),a("li",[a("code",[s._v("Token")]),s._v(" 词\n"),a("ul",[a("li",[a("code",[s._v("IdentifierName 标识符名称")]),s._v("：典型案例就是使用的变量名，注意这里关键字也包含在内。")]),s._v(" "),a("li",[a("code",[s._v("Punctuator 符号")]),s._v("：使用的运算符和大括号等符号。")]),s._v(" "),a("li",[a("code",[s._v("NumericLiteral 数字直接量")]),s._v("：就是写的数字。")]),s._v(" "),a("li",[a("code",[s._v("StringLiteral 字符串直接量")]),s._v("：就是用单引号或者双引号引起来的直接量。")]),s._v(" "),a("li",[a("code",[s._v("Template 字符串模板")]),s._v("：用反引号 ` 括起来的直接量。")])])])]),s._v(" "),a("h3",{attrs:{id:"_1-2、特别之处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、特别之处"}},[s._v("#")]),s._v(" 1.2、特别之处")]),s._v(" "),a("p",[s._v("1、除法和正则表达式冲突问题")]),s._v(" "),a("blockquote",[a("p",[s._v("JavaScript 不但支持除法运算符"),a("code",[s._v("/")]),s._v("和"),a("code",[s._v("/=")]),s._v("，还支持用斜杠括起来的正则表达式"),a("code",[s._v("/.../")]),s._v("。")])]),s._v(" "),a("p",[a("strong",[s._v("解决方案")]),s._v("：是定义两组词法，然后靠语法分析传一个标志给词法分析器，让它来决定使用哪一套词法。")]),s._v(" "),a("p",[s._v("2、字符串模板")]),s._v(" "),a("blockquote",[a("p",[s._v("理论上，"),a("code",[s._v("${ }")]),s._v("内部可以放任何 "),a("code",[s._v("JavaScript 表达式代码")]),s._v("，而这些代码是以 "),a("code",[s._v("}")]),s._v(" 结尾的，也就是说，这部分词法不允许出现 "),a("code",[s._v("}")]),s._v(" 运算符。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// \x3c!-- 模板语法 --\x3e")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("Hello, ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("world"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("3、四种词法定义")]),s._v(" "),a("ul",[a("li",[s._v("InputElementDiv")]),s._v(" "),a("li",[s._v("InputElementRegExp")]),s._v(" "),a("li",[s._v("InputElementRegExpOrTemplateTail")]),s._v(" "),a("li",[s._v("InputElementTemplateTail")])]),s._v(" "),a("h2",{attrs:{id:"二、空白符号-whitespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、空白符号-whitespace"}},[s._v("#")]),s._v(" 二、空白符号 Whitespace")]),s._v(" "),a("h3",{attrs:{id:"_2-1、空白符号分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、空白符号分类"}},[s._v("#")]),s._v(" 2.1、空白符号分类")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<HT>")]),s._v("(或称"),a("code",[s._v("<TAB>")]),s._v(") 是 "),a("code",[s._v("U+0009")]),s._v("，是缩进 "),a("code",[s._v("TAB")]),s._v(" 符，字符串中写的 "),a("code",[s._v("\\t")]),s._v(" 。")]),s._v(" "),a("li",[a("code",[s._v("<VT>")]),s._v("是 "),a("code",[s._v("U+000B")]),s._v("，也就是垂直方向的 "),a("code",[s._v("TAB 符 \\v")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("<FF>")]),s._v("是 "),a("code",[s._v("U+000C")]),s._v("，"),a("code",[s._v("Form Feed")]),s._v("，分页符，字符串直接量中写作 "),a("code",[s._v("\\f")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("<SP>")]),s._v("是 "),a("code",[s._v("U+0020")]),s._v("，就是最普通的空格。")]),s._v(" "),a("li",[a("code",[s._v("<NBSP>")]),s._v("是 "),a("code",[s._v("U+00A0")]),s._v("，非断行空格，它是 "),a("code",[s._v("SP")]),s._v(" 的一个变体，在文字排版中，可以避免因为空格在此处发生断行，其它方面和普通空格完全一样。")]),s._v(" "),a("li",[a("code",[s._v("<ZWNBSP>")]),s._v("(旧称"),a("code",[s._v("<BOM>")]),s._v(") 是 "),a("code",[s._v("U+FEFF")]),s._v("，这是 "),a("code",[s._v("ES5")]),s._v(" 新加入的空白符，是"),a("code",[s._v("Unicode")]),s._v("中的零宽非断行空格，在以 "),a("code",[s._v("UTF 格式")]),s._v("编码的文件中，常常在文件首插入一个额外的 "),a("code",[s._v("U+FEFF")]),s._v("，解析 "),a("code",[s._v("UTF 文件")]),s._v("的程序可以根据 "),a("code",[s._v("U+FEFF")]),s._v(" 的表示方法猜测文件采用哪种 "),a("code",[s._v("UTF 编码")]),s._v("方式。这个字符也叫做"),a("code",[s._v("bit order mark")]),s._v("。")])]),s._v(" "),a("h3",{attrs:{id:"_2-2、所有的-unicode-中的空格分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、所有的-unicode-中的空格分类"}},[s._v("#")]),s._v(" 2.2、所有的 Unicode 中的空格分类")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/dd/60/dd26aa9599b61d26e7de807dee2c6360.png",alt:"空格分类"}})]),s._v(" "),a("h2",{attrs:{id:"三、换行符-lineterminator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、换行符-lineterminator"}},[s._v("#")]),s._v(" 三、换行符 LineTerminator")]),s._v(" "),a("h3",{attrs:{id:"_3-1、四种换行符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、四种换行符"}},[s._v("#")]),s._v(" 3.1、四种换行符")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<LF>")]),s._v("：是 "),a("code",[s._v("U+000A")]),s._v("，就是最正常换行符，在字符串中的 "),a("code",[s._v("\\n")])]),s._v(" "),a("li",[a("code",[s._v("<CR>")]),s._v("：是 "),a("code",[s._v("U+000D")]),s._v("，这个字符真正意义上的"),a("code",[s._v("回车")]),s._v("，在字符串中是 "),a("code",[s._v("\\r")])]),s._v(" "),a("li",[a("code",[s._v("<LS>")]),s._v("：是 "),a("code",[s._v("U+2028")]),s._v("，是 "),a("code",[s._v("Unicode")]),s._v(" 中的行分隔符。")]),s._v(" "),a("li",[a("code",[s._v("<PS>")]),s._v("：是 "),a("code",[s._v("U+2029")]),s._v("，是 "),a("code",[s._v("Unicode")]),s._v(" 中的段落分隔符。")])]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("：换行符会影响 JavaScript 的两个重要语法特性："),a("code",[s._v("自动插入分号")]),s._v(" 和 "),a("code",[s._v("no line terminator")]),s._v("规则。")]),s._v(" "),a("h2",{attrs:{id:"四、注释-comment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、注释-comment"}},[s._v("#")]),s._v(" 四、注释 Comment")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 多行注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* MultiLineCommentChars */")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 单行注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SingleLineCommentChars")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"五、标识符名称-identifiername"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、标识符名称-identifiername"}},[s._v("#")]),s._v(" 五、标识符名称 IdentifierName")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("IdentifierName")]),s._v("可以以"),a("code",[s._v("美元符$")]),s._v("，"),a("code",[s._v("下划线_")]),s._v("或者 "),a("code",[s._v("Unicode 字母")]),s._v("开始，除了开始字符以外，还可以使用 "),a("code",[s._v("Unicode")]),s._v(" 中的连接标记、数字、以及连接符号。")])]),s._v(" "),a("p",[s._v("关键字")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" catch "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("const")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("debugger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("finally")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" ininstance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为了未来使用而保留的关键字")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在严格模式下还有")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("code",[s._v("NullLiteral（null）和 BooleanLiteral（true false）")]),s._v(" 也是保留字。")]),s._v(" "),a("p",[s._v("仅当不是保留字的时候，"),a("code",[s._v("IdentifierName")]),s._v("会被解析为"),a("code",[s._v("Identifier")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"六、符号-punctuator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、符号-punctuator"}},[s._v("#")]),s._v(" 六、符号 Punctuator")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{ ( ) [ ] . ... ; , < > <= >= == != === !== \n+ - * % ** ++ -- << >> >>> & | ^ ! ~ && || \n? : = += -= *= %= **= <<= >>= >>>= &= |= \n^= => / /= }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"七、数字直接量-numericliteral"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、数字直接量-numericliteral"}},[s._v("#")]),s._v(" 七、数字直接量 NumericLiteral")]),s._v(" "),a("blockquote",[a("p",[s._v("JavaScript 规范中规定的数字直接量可以支持四种写法：十进制数、二进制整数、八进制整数和十六进制整数。")])]),s._v(" "),a("p",[s._v("1、十进制的 Number 可以带小数，小数点前后部分都可以省略，但是不能同时省略")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".01")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0.01")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 12")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.01")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 12.01")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("2、12.toString() 为什么会报错？")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Uncaught SyntaxError: Invalid or unexpected token")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 原因： `12.` 会被当做省略了小数点后面部分的数字而看成一个整体，相当于执行了12toString()，所以会报错")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 解决：加入空格让其单独成为一个 token")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "12"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 或者加一个.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "12"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("另外科学计数法跟进制就不写了。。。。")]),s._v(" "),a("h2",{attrs:{id:"八、字符串直接量-stringliteral"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、字符串直接量-stringliteral"}},[s._v("#")]),s._v(" 八、字符串直接量 StringLiteral")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 双引号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" DoubleStringCharacters "')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 单引号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' SingleStringCharacters '")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_8-1、单字符转义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1、单字符转义"}},[s._v("#")]),s._v(" 8.1、单字符转义")]),s._v(" "),a("blockquote",[a("p",[s._v("即一个反斜杠 "),a("code",[s._v("\\")]),s._v(" 后面跟一个字符这种形式。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/02/75/022c2c77d0a3c846ad0d61b48c4e0e75.png",alt:"单字符转义"}})]),s._v(" "),a("h2",{attrs:{id:"九、正则表达式直接量-regularexpressionliteral"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、正则表达式直接量-regularexpressionliteral"}},[s._v("#")]),s._v(" 九、正则表达式直接量 RegularExpressionLiteral")]),s._v(" "),a("blockquote",[a("p",[s._v("正则表达式由 Body 和 Flags 两部分组成")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/RegularExpressionBody/g")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中 Body 部分至少有一个字符，第一个字符不能是 "),a("em",[s._v("（因为 /")]),s._v(" 跟多行注释有词法冲突）。")]),s._v(" "),a("h2",{attrs:{id:"十、字符串模板-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、字符串模板-template"}},[s._v("#")]),s._v(" 十、字符串模板 Template")]),s._v(" "),a("blockquote",[a("p",[s._v("在 JavaScript 词法中，包含 "),a("code",[s._v("${ }")]),s._v(" 的 Template，是被拆开分析的")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("c")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("e")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n// 被拆成了五个部分\n\n`a${  //  这个被称为模板头\nb     //  普通标识符\n}c${  //  被称为模板中段\nd     //  普通标识符\n}e`   //  被称为模板尾\n\n*/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("模板支持添加处理函数的写法，这时模板的各段会被拆开，传递给函数当参数：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kaimo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kaimo"')]),s._v("\n\nkaimo"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("hello ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("temp"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" !")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [["hello ", " !"], "kaimo"]')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);